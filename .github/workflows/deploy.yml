name: üöÄ Deploy BIGS

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# –ù–µ –¥–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –¥–µ–ø–ª–æ–µ–≤ –æ–¥–Ω–æ–π –≤–µ—Ç–∫–∏
concurrency:
  group: bigs-${{ github.ref }}
  cancel-in-progress: true

# –ü—Ä–∞–≤–∞ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞ –∫ –∫–æ–º–º–∏—Ç—É –∏ —Ä–∞–±–æ—Ç—ã —Å Docker
permissions:
  contents: write
  packages: write

env:
  BACKEND_IMAGE: ximikat01/bigs_backend
  FRONTEND_IMAGE: ximikat01/bigs_frontend

jobs:
  # ====================== –¢–ï–°–¢–´ (–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä) ======================
  tests:
    name: üß™ –¢–µ—Å—Ç—ã
    runs-on: ubuntu-latest
    steps:
      - name: üîÑ Checkout
        uses: actions/checkout@v4
      - name: üß∞ –°–æ–æ–±—â–µ–Ω–∏–µ
        run: |
          echo "–ü–æ–∫–∞ –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤ –Ω–µ—Ç ‚Äî —ç—Ç–æ—Ç —à–∞–≥ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä."
          echo "–î–æ–±–∞–≤–∏–º –ª–∏–Ω—Ç–µ—Ä—ã/—é–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –ø–æ–∑–¥–Ω–µ–µ." >> $GITHUB_STEP_SUMMARY

  # ====================== –ë–ò–õ–î BACKEND ======================
  build_backend:
    name: üê≥ –ë–∏–ª–¥ backend-–æ–±—Ä–∞–∑–∞
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: üîÑ Checkout
        uses: actions/checkout@v4

      - name: üß± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë –õ–æ–≥–∏–Ω –≤ Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üè∑Ô∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑–∞
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BACKEND_IMAGE }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: üèóÔ∏è –°–±–æ—Ä–∫–∞ –∏ push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./env/backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üìù –ò—Ç–æ–≥
        run: |
          echo "‚úÖ Backend —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—à–µ–Ω:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' >> $GITHUB_STEP_SUMMARY

  # ====================== –ë–ò–õ–î FRONTEND ======================
  build_frontend:
    name: üê≥ –ë–∏–ª–¥ frontend-–æ–±—Ä–∞–∑–∞
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: üîÑ Checkout
        uses: actions/checkout@v4

      - name: üß± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë –õ–æ–≥–∏–Ω –≤ Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üè∑Ô∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑–∞
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FRONTEND_IMAGE }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: üèóÔ∏è –°–±–æ—Ä–∫–∞ –∏ push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./env/frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üìù –ò—Ç–æ–≥
        run: |
          echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–ø—É—à–µ–Ω:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' >> $GITHUB_STEP_SUMMARY

  # ====================== –î–ï–ü–õ–û–ô ======================
  deploy:
    name: üöÄ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    runs-on: ubuntu-latest
    needs:
      - build_backend
      - build_frontend
    steps:
      - name: üîÑ Checkout
        uses: actions/checkout@v4

      - name: üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            mkdir -p ${{ secrets.PROJECT_DIR }}/env/frontend

      - name: üì¶ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã (compose + nginx)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: |
            docker-compose.production.yml
            nginx.conf
            env/frontend/nginx.conf
          target: ${{ secrets.PROJECT_DIR }}
          overwrite: true

      - name: üñ•Ô∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_DIR }}
            echo "üì• –¢—è–Ω–µ–º —Å–≤–µ–∂–∏–µ –æ–±—Ä–∞–∑—ã‚Ä¶"
            docker compose -f docker-compose.production.yml pull
            echo "üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ‚Ä¶"
            docker compose -f docker-compose.production.yml down
            echo "üöÄ –ü–æ–¥–Ω–∏–º–∞–µ–º –Ω–æ–≤—ã–µ‚Ä¶"
            docker compose -f docker-compose.production.yml up -d
            echo "‚úÖ –ì–æ—Ç–æ–≤–æ."

  # ====================== –ü–†–û–í–ï–†–ö–ê ======================
  verify:
    name: üîé –ü—Ä–æ–≤–µ—Ä–∫–∞
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: docker ps
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'

  # ====================== –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –ö –ö–û–ú–ú–ò–¢–£ ======================
  comment:
    name: üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ–º–º–∏—Ç—É (RU)
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: ‚úçÔ∏è –ü–∏—à–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        uses: actions/github-script@v7
        with:
          script: |
            const ok = '${{ needs.deploy.result }}' === 'success';
            const body = [
              `üõ∞Ô∏è *–î–µ–ø–ª–æ–π BIGS*: **${ok ? '—É—Å–ø–µ—à–Ω–æ' : '—Å –æ—à–∏–±–∫–∞–º–∏'}**`,
              `–í–µ—Ç–≤—å: \`${context.ref}\``,
              `–ö–æ–º–º–∏—Ç: https://github.com/${{ github.repository }}/commit/${{ github.sha }}`,
              `–°–µ—Ä–≤–µ—Ä: \`${{ secrets.SSH_HOST }}\``,
            ].join('\n');
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body
            });

  # ====================== –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –í TELEGRAM ======================
  notify:
    name: üì£ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    steps:
      - name: üì¢ –û—Ç–ø—Ä–∞–≤–∫–∞
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ –î–µ–ø–ª–æ–π BIGS: *${{ needs.deploy.result }}*
            üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/${{ github.repository }}
            üîó –ö–æ–º–º–∏—Ç: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
