name: üöÄ Deploy BIGS

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # ====================== CHECKOUT ======================
      - name: üîÑ Checkout code
        uses: actions/checkout@v4

      # ====================== LOGIN TO DOCKER HUB ======================
      - name: üîë Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ====================== BUILD & PUSH BACKEND ======================
      - name: üèóÔ∏è Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./env/backend/Dockerfile
          push: true
          tags: ximikat01/bigs_backend:latest

      # ====================== BUILD & PUSH FRONTEND ======================
      - name: üèóÔ∏è Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./env/frontend/Dockerfile
          push: true
          tags: ximikat01/bigs_frontend:latest

      # ====================== SSH SETUP ======================
      - name: üîë Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # ====================== COPY FILES & DEPLOY ======================
      - name: üöÄ Deploy on server
        run: |
          # –∫–æ–ø–∏—Ä—É–µ–º compose –∏ nginx.conf –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          scp -i ~/.ssh/id_rsa -P ${{ secrets.SSH_PORT }} docker-compose.production.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.PROJECT_DIR }}/docker-compose.production.yml
          scp -i ~/.ssh/id_rsa -P ${{ secrets.SSH_PORT }} env/frontend/nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.PROJECT_DIR }}/env/frontend/nginx.conf

          # —Ä–µ—Å—Ç–∞—Ä—Ç —Å–µ—Ä–≤–∏—Å–æ–≤
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e
          cd ${{ secrets.PROJECT_DIR }}
          docker compose -f docker-compose.production.yml pull
          docker compose -f docker-compose.production.yml down
          docker compose -f docker-compose.production.yml up -d
          EOF

      # ====================== VERIFY DEPLOY ======================
      - name: ‚úÖ Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'"

      # ====================== NOTIFICATION ======================
      - name: üì¢ Notify Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ BIGS Deployment *${{ job.status }}*
            üì¶ Repo: https://github.com/${{ github.repository }}
            üîó Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
