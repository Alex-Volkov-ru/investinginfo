name: 🚀 Deploy BIGS

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # ====================== CHECKOUT ======================
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      # ====================== LOGIN TO DOCKER HUB ======================
      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # ====================== BUILD & PUSH BACKEND ======================
      - name: 🏗️ Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./env/backend/Dockerfile
          push: true
          tags: ximikat01/bigs_backend:latest

      # ====================== BUILD & PUSH FRONTEND ======================
      - name: 🏗️ Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./env/frontend/Dockerfile
          push: true
          tags: ximikat01/bigs_frontend:latest

      # ====================== SSH SETUP ======================
      - name: 🔑 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # ====================== DEPLOY ON SERVER ======================
      - name: 🚀 Deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -e

          # создаем папку если нет
          mkdir -p ${{ secrets.PROJECT_DIR }}
          cd ${{ secrets.PROJECT_DIR }}

          # если нет репозитория — клонируем, если есть — обновляем
          if [ ! -d ".git" ]; then
            git clone https://github.com/${{ github.repository }} .
          else
            git fetch --all
            git reset --hard origin/master
          fi

          # перезапуск
          docker compose -f docker-compose.production.yml pull
          docker compose -f docker-compose.production.yml down
          docker compose -f docker-compose.production.yml up -d
          EOF

      # ====================== VERIFY DEPLOY ======================
      - name: ✅ Verify deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'"

      # ====================== NOTIFICATION ======================
      - name: 📢 Notify Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            🚀 BIGS Deployment *${{ job.status }}*
            📦 Repo: https://github.com/${{ github.repository }}
            🔗 Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
