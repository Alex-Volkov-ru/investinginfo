version: "3.9"

networks:
  portfolio-net:
    driver: bridge

volumes:
  pg_data:
  frontend_volume:

services:
  db:
    image: postgres:16-alpine
    container_name: bigs-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--lc-collate=C --lc-ctype=ru_RU.UTF-8 --lc-messages=en_US.UTF-8 --encoding=UTF-8"
      TZ: ${TZ:-Europe/Moscow}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: unless-stopped
    ports:
      - "5434:5432"
    networks: [portfolio-net]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Автомиграции (выполняется один раз при старте)
  flyway:
    image: flyway/flyway:11-alpine
    container_name: bigs-flyway
    depends_on:
      db:
        condition: service_healthy
    environment:
      FLYWAY_SCHEMAS: pf
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
      FLYWAY_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_BASELINE_ON_MIGRATE: "true"
    volumes:
      - ./env/pgsql/migrations:/flyway/sql:ro
    command: migrate
    restart: "no"
    networks: [portfolio-net]
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  backend:
    image: ximikat01/bigs_backend:latest
    container_name: bigs-backend
    env_file: .env
    depends_on:
      flyway:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    # Делаем тише uvicorn (меньше логов)
    command: >
      uvicorn app.backend.main:app
      --host 0.0.0.0 --port 8000
      --log-level info
      --no-access-log
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/health/ping || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    ports:
      - "8001:8000"
    restart: always
    networks: [portfolio-net]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    image: ximikat01/bigs_frontend:latest
    container_name: bigs-frontend
    volumes:
      - frontend_volume:/frontend-dist
    command: sh -c "cp -r /usr/share/nginx/html/. /frontend-dist && tail -f /dev/null"
    restart: unless-stopped
    networks: [portfolio-net]
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  nginx:
    image: nginx:alpine
    container_name: bigs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_volume:/frontend-dist
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks: [portfolio-net]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  certbot:
    image: certbot/certbot
    container_name: bigs-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks: [portfolio-net]
    restart: "no"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
