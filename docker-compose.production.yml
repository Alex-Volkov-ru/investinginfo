version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: bigs-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - portfolio-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s

  cli-flyway:
    profiles: ["cli-flyway"]
    image: flyway/flyway:11-alpine
    container_name: bigs-flyway
    depends_on:
      db:
        condition: service_healthy
    environment:
      FLYWAY_LOCATIONS: filesystem:/flyway/sql
      FLYWAY_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./env/pgsql/migrations:/flyway/sql:ro
    command: migrate
    restart: "no"
    networks:
      - portfolio-net

  backend:
    image: ximikat01/bigs_backend:latest
    container_name: bigs-backend
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    networks:
      - portfolio-net

  frontend:
    image: ximikat01/bigs_frontend:latest
    container_name: bigs-frontend
    command: sh -c "cp -r /usr/share/nginx/html/. /frontend-dist && tail -f /dev/null"
    volumes:
      - frontend_volume:/frontend-dist
    networks:
      - portfolio-net

  nginx:
    image: nginx:1.25-alpine
    container_name: bigs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./env/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_volume:/frontend-dist
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
      - frontend
    networks:
      - portfolio-net

volumes:
  pg_data:
  frontend_volume:

networks:
  portfolio-net:
    driver: bridge
